<?xml version="1.0" encoding="UTF-8"?>
<instructionals module="QtSql">
    <examples>
        <example name="Books" docUrl="qthelp://org.qt-project.qtsql.551/qtsql/qtsql-books-example.html" projectPath="sql/books/books.pro" imageUrl="qthelp://org.qt-project.qtsql.551/qtsql/images/books-demo.png">
            <description><![CDATA[Shows how to use Qt SQL classes with a model/view framework.]]></description>
            <tags>sql,books</tags>
            <fileToOpen mainFile="true">sql/books/main.cpp</fileToOpen>
        </example>
        <example name="Cached Table Example" docUrl="qthelp://org.qt-project.qtsql.551/qtsql/qtsql-cachedtable-example.html" projectPath="sql/cachedtable/cachedtable.pro" imageUrl="qthelp://org.qt-project.qtsql.551/qtsql/images/cachedtable-example.png">
            <description><![CDATA[The Cached Table example shows how a table view can be used to access a database, caching any changes to the data until the user explicitly submits them using a push button.]]></description>
            <tags>sql,table,cached</tags>
            <fileToOpen mainFile="true">sql/cachedtable/main.cpp</fileToOpen>
        </example>
        <example name="Drill Down Example" docUrl="qthelp://org.qt-project.qtsql.551/qtsql/qtsql-drilldown-example.html" projectPath="sql/drilldown/drilldown.pro" imageUrl="qthelp://org.qt-project.qtsql.551/qtsql/images/drilldown-example.png">
            <description><![CDATA[The Drill Down example shows how to read data from a database as well as submit changes, using the QSqlRelationalTableModel and QDataWidgetMapper classes.]]></description>
            <tags>sql,drill,down</tags>
            <fileToOpen mainFile="true">sql/drilldown/main.cpp</fileToOpen>
        </example>
        <example name="Master Detail Example" docUrl="qthelp://org.qt-project.qtsql.551/qtsql/qtsql-masterdetail-example.html" projectPath="sql/masterdetail/masterdetail.pro" imageUrl="qthelp://org.qt-project.qtsql.551/qtsql/images/masterdetail-example.png">
            <description><![CDATA[The Master Detail Example shows how to present data from different data sources in the same application. The album titles, and the corresponding artists and release dates, are kept in a database, while each album's tracks are stored in an XML file.]]></description>
            <tags>sql,master,detail</tags>
            <fileToOpen mainFile="true">sql/masterdetail/main.cpp</fileToOpen>
        </example>
        <example name="Query Model Example" docUrl="qthelp://org.qt-project.qtsql.551/qtsql/qtsql-querymodel-example.html" projectPath="sql/querymodel/querymodel.pro" imageUrl="qthelp://org.qt-project.qtsql.551/qtsql/images/querymodel-example.png">
            <description><![CDATA[The Query Model example shows how to make customized versions of data obtained from a SQL query, using a model that encapsulates the query and table views to display the results.]]></description>
            <tags>sql,query,model</tags>
            <fileToOpen mainFile="true">sql/querymodel/main.cpp</fileToOpen>
        </example>
        <example name="Relational Table Model Example" docUrl="qthelp://org.qt-project.qtsql.551/qtsql/qtsql-relationaltablemodel-example.html" projectPath="sql/relationaltablemodel/relationaltablemodel.pro" imageUrl="qthelp://org.qt-project.qtsql.551/qtsql/images/relationaltablemodel-example.png">
            <description><![CDATA[The Relational Table Model example shows how to use table views with a relational model to visualize the relations between items in a database.]]></description>
            <tags>relational,sql,table,model</tags>
            <fileToOpen mainFile="true">sql/relationaltablemodel/relationaltablemodel.cpp</fileToOpen>
        </example>
        <example name="SQL Browser" docUrl="qthelp://org.qt-project.qtsql.551/qtsql/qtsql-sqlbrowser-example.html" projectPath="sql/sqlbrowser/sqlbrowser.pro" imageUrl="qthelp://org.qt-project.qtsql.551/qtsql/images/sqlbrowser-demo.png">
            <description><![CDATA[The SQL Browser example shows how a data browser can be used to visualize the results of SQL statements on a live database.]]></description>
            <tags>sql,browser</tags>
            <fileToOpen mainFile="true">sql/sqlbrowser/main.cpp</fileToOpen>
        </example>
        <example name="SQL Widget Mapper Example" docUrl="qthelp://org.qt-project.qtsql.551/qtsql/qtsql-sqlwidgetmapper-example.html" projectPath="sql/sqlwidgetmapper/sqlwidgetmapper.pro" imageUrl="qthelp://org.qt-project.qtsql.551/qtsql/images/sql-widget-mapper.png">
            <description><![CDATA[The SQL Widget Mapper example shows how to use a map information from a database to widgets on a form.]]></description>
            <tags>sql,widget,mapper</tags>
            <fileToOpen mainFile="true">sql/sqlwidgetmapper/main.cpp</fileToOpen>
        </example>
        <example name="Table Model Example" docUrl="qthelp://org.qt-project.qtsql.551/qtsql/qtsql-tablemodel-example.html" projectPath="sql/tablemodel/tablemodel.pro" imageUrl="qthelp://org.qt-project.qtsql.551/qtsql/images/tablemodel-example.png">
            <description><![CDATA[The Table Model example shows how to use a specialized SQL table model with table views to edit information in a database.]]></description>
            <tags>sql,table,model</tags>
            <fileToOpen mainFile="true">sql/tablemodel/tablemodel.cpp</fileToOpen>
        </example>
    </examples>
</instructionals>
