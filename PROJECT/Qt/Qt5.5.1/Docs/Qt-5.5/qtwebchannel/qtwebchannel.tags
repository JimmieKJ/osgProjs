<?xml version="1.0" encoding="UTF-8"?>
<tagfile>
    <compound kind="class">
        <name>QWebChannel</name>
        <filename>qwebchannel.html</filename>
        <base>QObject</base>
        <member kind="property" type="bool">
            <name>blockUpdates</name>
            <anchorfile>qwebchannel.html</anchorfile>
            <anchor>blockUpdates-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QWebChannel</name>
            <anchorfile>qwebchannel.html</anchorfile>
            <anchor>QWebChannel</anchor>
            <arglist>(QObject *parent)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>~QWebChannel</name>
            <anchorfile>qwebchannel.html</anchorfile>
            <anchor>dtor.QWebChannel</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>registerObjects</name>
            <anchorfile>qwebchannel.html</anchorfile>
            <anchor>registerObjects</anchor>
            <arglist>(const QHash&lt;QString, QObject *&gt; &amp;objects)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QHash&lt;QString, QObject *&gt;</type>
            <name>registeredObjects</name>
            <anchorfile>qwebchannel.html</anchorfile>
            <anchor>registeredObjects</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>registerObject</name>
            <anchorfile>qwebchannel.html</anchorfile>
            <anchor>registerObject</anchor>
            <arglist>(const QString &amp;id, QObject *object)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>deregisterObject</name>
            <anchorfile>qwebchannel.html</anchorfile>
            <anchor>deregisterObject</anchor>
            <arglist>(QObject *object)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>blockUpdates</name>
            <anchorfile>qwebchannel.html</anchorfile>
            <anchor>blockUpdates-prop</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setBlockUpdates</name>
            <anchorfile>qwebchannel.html</anchorfile>
            <anchor>blockUpdates-prop</anchor>
            <arglist>(bool block)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>blockUpdatesChanged</name>
            <anchorfile>qwebchannel.html</anchorfile>
            <anchor>blockUpdates-prop</anchor>
            <arglist>(bool block)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>connectTo</name>
            <anchorfile>qwebchannel.html</anchorfile>
            <anchor>connectTo</anchor>
            <arglist>(QWebChannelAbstractTransport *transport)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>disconnectFrom</name>
            <anchorfile>qwebchannel.html</anchorfile>
            <anchor>disconnectFrom</anchor>
            <arglist>(QWebChannelAbstractTransport *transport)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QWebChannelAbstractTransport</name>
        <filename>qwebchannelabstracttransport.html</filename>
        <base>QObject</base>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QWebChannelAbstractTransport</name>
            <anchorfile>qwebchannelabstracttransport.html</anchorfile>
            <anchor>QWebChannelAbstractTransport</anchor>
            <arglist>(QObject *parent)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual </type>
            <name>~QWebChannelAbstractTransport</name>
            <anchorfile>qwebchannelabstracttransport.html</anchorfile>
            <anchor>dtor.QWebChannelAbstractTransport</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtual="pure" static="no">
            <type>virtual void</type>
            <name>sendMessage</name>
            <anchorfile>qwebchannelabstracttransport.html</anchorfile>
            <anchor>sendMessage</anchor>
            <arglist>(const QJsonObject &amp;message) = 0</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>messageReceived</name>
            <anchorfile>qwebchannelabstracttransport.html</anchorfile>
            <anchor>messageReceived</anchor>
            <arglist>(const QJsonObject &amp;message, QWebChannelAbstractTransport *transport)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtWebChannel.WebChannel</name>
        <filename>qml-qtwebchannel-webchannel.html</filename>
    </compound>
</tagfile>
