<?xml version="1.0" encoding="UTF-8"?>
<tagfile>
    <compound kind="namespace">
        <name>QBluetooth</name>
        <filename>qbluetooth.html</filename>
        <member kind="enum">
            <name>Security</name>
            <anchor>Security-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="NoSecurity">
            <anchor>Security-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Authorization">
            <anchor>Security-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Authentication">
            <anchor>Security-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Encryption">
            <anchor>Security-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Secure">
            <anchor>Security-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="QBluetooth::Security">
            <name>SecurityFlags</name>
            <anchorfile>qbluetooth.html</anchorfile>
            <anchor>Security-enum</anchor>
            <arglist></arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QBluetoothAddress</name>
        <filename>qbluetoothaddress.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothAddress</name>
            <anchorfile>qbluetoothaddress.html</anchorfile>
            <anchor>QBluetoothAddress</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothAddress</name>
            <anchorfile>qbluetoothaddress.html</anchorfile>
            <anchor>QBluetoothAddress-2</anchor>
            <arglist>(quint64 address)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothAddress</name>
            <anchorfile>qbluetoothaddress.html</anchorfile>
            <anchor>QBluetoothAddress-3</anchor>
            <arglist>(const QString &amp;address)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothAddress</name>
            <anchorfile>qbluetoothaddress.html</anchorfile>
            <anchor>QBluetoothAddress-4</anchor>
            <arglist>(const QBluetoothAddress &amp;other)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>~QBluetoothAddress</name>
            <anchorfile>qbluetoothaddress.html</anchorfile>
            <anchor>dtor.QBluetoothAddress</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothAddress &amp;</type>
            <name>operator=</name>
            <anchorfile>qbluetoothaddress.html</anchorfile>
            <anchor>operator-eq</anchor>
            <arglist>(const QBluetoothAddress &amp;other)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isNull</name>
            <anchorfile>qbluetoothaddress.html</anchorfile>
            <anchor>isNull</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>clear</name>
            <anchorfile>qbluetoothaddress.html</anchorfile>
            <anchor>clear</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>operator&lt;</name>
            <anchorfile>qbluetoothaddress.html</anchorfile>
            <anchor>operator-lt</anchor>
            <arglist>(const QBluetoothAddress &amp;other) const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>operator==</name>
            <anchorfile>qbluetoothaddress.html</anchorfile>
            <anchor>operator-eq-eq</anchor>
            <arglist>(const QBluetoothAddress &amp;other) const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>operator!=</name>
            <anchorfile>qbluetoothaddress.html</anchorfile>
            <anchor>operator-not-eq</anchor>
            <arglist>(const QBluetoothAddress &amp;other) const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>quint64</type>
            <name>toUInt64</name>
            <anchorfile>qbluetoothaddress.html</anchorfile>
            <anchor>toUInt64</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>toString</name>
            <anchorfile>qbluetoothaddress.html</anchorfile>
            <anchor>toString</anchor>
            <arglist>() const</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QBluetoothDeviceDiscoveryAgent</name>
        <filename>qbluetoothdevicediscoveryagent.html</filename>
        <base>QObject</base>
        <member kind="property" type="QBluetoothDeviceDiscoveryAgent::InquiryType">
            <name>inquiryType</name>
            <anchorfile>qbluetoothdevicediscoveryagent.html</anchorfile>
            <anchor>inquiryType-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>Error</name>
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="NoError">
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="InputOutputError">
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="PoweredOffError">
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="InvalidBluetoothAdapterError">
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UnsupportedPlatformError">
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UnknownError">
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>InquiryType</name>
            <anchor>InquiryType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="GeneralUnlimitedInquiry">
            <anchor>InquiryType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="LimitedInquiry">
            <anchor>InquiryType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothDeviceDiscoveryAgent</name>
            <anchorfile>qbluetoothdevicediscoveryagent.html</anchorfile>
            <anchor>QBluetoothDeviceDiscoveryAgent</anchor>
            <arglist>(QObject *parent)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothDeviceDiscoveryAgent</name>
            <anchorfile>qbluetoothdevicediscoveryagent.html</anchorfile>
            <anchor>QBluetoothDeviceDiscoveryAgent-2</anchor>
            <arglist>(const QBluetoothAddress &amp;deviceAdapter, QObject *parent)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>~QBluetoothDeviceDiscoveryAgent</name>
            <anchorfile>qbluetoothdevicediscoveryagent.html</anchorfile>
            <anchor>dtor.QBluetoothDeviceDiscoveryAgent</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothDeviceDiscoveryAgent::InquiryType</type>
            <name>inquiryType</name>
            <anchorfile>qbluetoothdevicediscoveryagent.html</anchorfile>
            <anchor>inquiryType-prop</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setInquiryType</name>
            <anchorfile>qbluetoothdevicediscoveryagent.html</anchorfile>
            <anchor>inquiryType-prop</anchor>
            <arglist>(QBluetoothDeviceDiscoveryAgent::InquiryType type)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isActive</name>
            <anchorfile>qbluetoothdevicediscoveryagent.html</anchorfile>
            <anchor>isActive</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Error</type>
            <name>error</name>
            <anchorfile>qbluetoothdevicediscoveryagent.html</anchorfile>
            <anchor>error</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>errorString</name>
            <anchorfile>qbluetoothdevicediscoveryagent.html</anchorfile>
            <anchor>errorString</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QList&lt;QBluetoothDeviceInfo&gt;</type>
            <name>discoveredDevices</name>
            <anchorfile>qbluetoothdevicediscoveryagent.html</anchorfile>
            <anchor>discoveredDevices</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>start</name>
            <anchorfile>qbluetoothdevicediscoveryagent.html</anchorfile>
            <anchor>start</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>stop</name>
            <anchorfile>qbluetoothdevicediscoveryagent.html</anchorfile>
            <anchor>stop</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>deviceDiscovered</name>
            <anchorfile>qbluetoothdevicediscoveryagent.html</anchorfile>
            <anchor>deviceDiscovered</anchor>
            <arglist>(const QBluetoothDeviceInfo &amp;info)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>finished</name>
            <anchorfile>qbluetoothdevicediscoveryagent.html</anchorfile>
            <anchor>finished</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>error</name>
            <anchorfile>qbluetoothdevicediscoveryagent.html</anchorfile>
            <anchor>error-2</anchor>
            <arglist>(QBluetoothDeviceDiscoveryAgent::Error error)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>canceled</name>
            <anchorfile>qbluetoothdevicediscoveryagent.html</anchorfile>
            <anchor>canceled</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QBluetoothDeviceInfo</name>
        <filename>qbluetoothdeviceinfo.html</filename>
        <member kind="enum">
            <name>MajorDeviceClass</name>
            <anchor>MajorDeviceClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="MiscellaneousDevice">
            <anchor>MajorDeviceClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ComputerDevice">
            <anchor>MajorDeviceClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="PhoneDevice">
            <anchor>MajorDeviceClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="LANAccessDevice">
            <anchor>MajorDeviceClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="AudioVideoDevice">
            <anchor>MajorDeviceClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="PeripheralDevice">
            <anchor>MajorDeviceClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ImagingDevice">
            <anchor>MajorDeviceClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="WearableDevice">
            <anchor>MajorDeviceClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ToyDevice">
            <anchor>MajorDeviceClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HealthDevice">
            <anchor>MajorDeviceClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UncategorizedDevice">
            <anchor>MajorDeviceClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>MinorMiscellaneousClass</name>
            <anchor>MinorMiscellaneousClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UncategorizedMiscellaneous">
            <anchor>MinorMiscellaneousClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>MinorComputerClass</name>
            <anchor>MinorComputerClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UncategorizedComputer">
            <anchor>MinorComputerClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="DesktopComputer">
            <anchor>MinorComputerClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ServerComputer">
            <anchor>MinorComputerClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="LaptopComputer">
            <anchor>MinorComputerClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HandheldClamShellComputer">
            <anchor>MinorComputerClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HandheldComputer">
            <anchor>MinorComputerClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="WearableComputer">
            <anchor>MinorComputerClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>MinorPhoneClass</name>
            <anchor>MinorPhoneClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UncategorizedPhone">
            <anchor>MinorPhoneClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="CellularPhone">
            <anchor>MinorPhoneClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="CordlessPhone">
            <anchor>MinorPhoneClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="SmartPhone">
            <anchor>MinorPhoneClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="WiredModemOrVoiceGatewayPhone">
            <anchor>MinorPhoneClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="CommonIsdnAccessPhone">
            <anchor>MinorPhoneClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>MinorNetworkClass</name>
            <anchor>MinorNetworkClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="NetworkFullService">
            <anchor>MinorNetworkClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="NetworkLoadFactorOne">
            <anchor>MinorNetworkClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="NetworkLoadFactorTwo">
            <anchor>MinorNetworkClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="NetworkLoadFactorThree">
            <anchor>MinorNetworkClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="NetworkLoadFactorFour">
            <anchor>MinorNetworkClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="NetworkLoadFactorFive">
            <anchor>MinorNetworkClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="NetworkLoadFactorSix">
            <anchor>MinorNetworkClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="NetworkNoService">
            <anchor>MinorNetworkClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>MinorAudioVideoClass</name>
            <anchor>MinorAudioVideoClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UncategorizedAudioVideoDevice">
            <anchor>MinorAudioVideoClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="WearableHeadsetDevice">
            <anchor>MinorAudioVideoClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HandsFreeDevice">
            <anchor>MinorAudioVideoClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Microphone">
            <anchor>MinorAudioVideoClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Loudspeaker">
            <anchor>MinorAudioVideoClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Headphones">
            <anchor>MinorAudioVideoClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="PortableAudioDevice">
            <anchor>MinorAudioVideoClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="CarAudio">
            <anchor>MinorAudioVideoClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="SetTopBox">
            <anchor>MinorAudioVideoClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HiFiAudioDevice">
            <anchor>MinorAudioVideoClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Vcr">
            <anchor>MinorAudioVideoClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="VideoCamera">
            <anchor>MinorAudioVideoClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Camcorder">
            <anchor>MinorAudioVideoClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="VideoMonitor">
            <anchor>MinorAudioVideoClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="VideoDisplayAndLoudspeaker">
            <anchor>MinorAudioVideoClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="VideoConferencing">
            <anchor>MinorAudioVideoClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="GamingDevice">
            <anchor>MinorAudioVideoClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>MinorPeripheralClass</name>
            <anchor>MinorPeripheralClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UncategorizedPeripheral">
            <anchor>MinorPeripheralClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="KeyboardPeripheral">
            <anchor>MinorPeripheralClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="PointingDevicePeripheral">
            <anchor>MinorPeripheralClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="KeyboardWithPointingDevicePeripheral">
            <anchor>MinorPeripheralClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="JoystickPeripheral">
            <anchor>MinorPeripheralClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="GamepadPeripheral">
            <anchor>MinorPeripheralClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="RemoteControlPeripheral">
            <anchor>MinorPeripheralClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="SensingDevicePeripheral">
            <anchor>MinorPeripheralClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="DigitizerTabletPeripheral">
            <anchor>MinorPeripheralClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="CardReaderPeripheral">
            <anchor>MinorPeripheralClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>MinorImagingClass</name>
            <anchor>MinorImagingClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UncategorizedImagingDevice">
            <anchor>MinorImagingClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ImageDisplay">
            <anchor>MinorImagingClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ImageCamera">
            <anchor>MinorImagingClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ImageScanner">
            <anchor>MinorImagingClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ImagePrinter">
            <anchor>MinorImagingClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>MinorWearableClass</name>
            <anchor>MinorWearableClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UncategorizedWearableDevice">
            <anchor>MinorWearableClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="WearableWristWatch">
            <anchor>MinorWearableClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="WearablePager">
            <anchor>MinorWearableClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="WearableJacket">
            <anchor>MinorWearableClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="WearableHelmet">
            <anchor>MinorWearableClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="WearableGlasses">
            <anchor>MinorWearableClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>MinorToyClass</name>
            <anchor>MinorToyClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UncategorizedToy">
            <anchor>MinorToyClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ToyRobot">
            <anchor>MinorToyClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ToyVehicle">
            <anchor>MinorToyClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ToyDoll">
            <anchor>MinorToyClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ToyController">
            <anchor>MinorToyClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ToyGame">
            <anchor>MinorToyClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>MinorHealthClass</name>
            <anchor>MinorHealthClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UncategorizedHealthDevice">
            <anchor>MinorHealthClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HealthBloodPressureMonitor">
            <anchor>MinorHealthClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HealthThermometer">
            <anchor>MinorHealthClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HealthWeightScale">
            <anchor>MinorHealthClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HealthGlucoseMeter">
            <anchor>MinorHealthClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HealthPulseOximeter">
            <anchor>MinorHealthClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HealthDataDisplay">
            <anchor>MinorHealthClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HealthStepCounter">
            <anchor>MinorHealthClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>ServiceClass</name>
            <anchor>ServiceClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="NoService">
            <anchor>ServiceClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="PositioningService">
            <anchor>ServiceClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="NetworkingService">
            <anchor>ServiceClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="RenderingService">
            <anchor>ServiceClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="CapturingService">
            <anchor>ServiceClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ObjectTransferService">
            <anchor>ServiceClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="AudioService">
            <anchor>ServiceClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="TelephonyService">
            <anchor>ServiceClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="InformationService">
            <anchor>ServiceClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="AllServices">
            <anchor>ServiceClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="QBluetoothDeviceInfo::ServiceClass">
            <name>ServiceClasses</name>
            <anchorfile>qbluetoothdeviceinfo.html</anchorfile>
            <anchor>ServiceClass-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>DataCompleteness</name>
            <anchor>DataCompleteness-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="DataComplete">
            <anchor>DataCompleteness-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="DataIncomplete">
            <anchor>DataCompleteness-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="DataUnavailable">
            <anchor>DataCompleteness-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>CoreConfiguration</name>
            <anchor>CoreConfiguration-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UnknownCoreConfiguration">
            <anchor>CoreConfiguration-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="LowEnergyCoreConfiguration">
            <anchor>CoreConfiguration-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="BaseRateCoreConfiguration">
            <anchor>CoreConfiguration-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="BaseRateAndLowEnergyCoreConfiguration">
            <anchor>CoreConfiguration-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="QBluetoothDeviceInfo::CoreConfiguration">
            <name>CoreConfigurations</name>
            <anchorfile>qbluetoothdeviceinfo.html</anchorfile>
            <anchor>CoreConfiguration-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothDeviceInfo</name>
            <anchorfile>qbluetoothdeviceinfo.html</anchorfile>
            <anchor>QBluetoothDeviceInfo</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothDeviceInfo</name>
            <anchorfile>qbluetoothdeviceinfo.html</anchorfile>
            <anchor>QBluetoothDeviceInfo-2</anchor>
            <arglist>(const QBluetoothAddress &amp;address, const QString &amp;name, quint32 classOfDevice)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothDeviceInfo</name>
            <anchorfile>qbluetoothdeviceinfo.html</anchorfile>
            <anchor>QBluetoothDeviceInfo-3</anchor>
            <arglist>(const QBluetoothUuid &amp;uuid, const QString &amp;name, quint32 classOfDevice)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothDeviceInfo</name>
            <anchorfile>qbluetoothdeviceinfo.html</anchorfile>
            <anchor>QBluetoothDeviceInfo-4</anchor>
            <arglist>(const QBluetoothDeviceInfo &amp;other)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>~QBluetoothDeviceInfo</name>
            <anchorfile>qbluetoothdeviceinfo.html</anchorfile>
            <anchor>dtor.QBluetoothDeviceInfo</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isValid</name>
            <anchorfile>qbluetoothdeviceinfo.html</anchorfile>
            <anchor>isValid</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isCached</name>
            <anchorfile>qbluetoothdeviceinfo.html</anchorfile>
            <anchor>isCached</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setCached</name>
            <anchorfile>qbluetoothdeviceinfo.html</anchorfile>
            <anchor>setCached</anchor>
            <arglist>(bool cached)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothDeviceInfo &amp;</type>
            <name>operator=</name>
            <anchorfile>qbluetoothdeviceinfo.html</anchorfile>
            <anchor>operator-eq</anchor>
            <arglist>(const QBluetoothDeviceInfo &amp;other)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>operator==</name>
            <anchorfile>qbluetoothdeviceinfo.html</anchorfile>
            <anchor>operator-eq-eq</anchor>
            <arglist>(const QBluetoothDeviceInfo &amp;other) const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>operator!=</name>
            <anchorfile>qbluetoothdeviceinfo.html</anchorfile>
            <anchor>operator-not-eq</anchor>
            <arglist>(const QBluetoothDeviceInfo &amp;other) const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothAddress</type>
            <name>address</name>
            <anchorfile>qbluetoothdeviceinfo.html</anchorfile>
            <anchor>address</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>name</name>
            <anchorfile>qbluetoothdeviceinfo.html</anchorfile>
            <anchor>name</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>ServiceClasses</type>
            <name>serviceClasses</name>
            <anchorfile>qbluetoothdeviceinfo.html</anchorfile>
            <anchor>serviceClasses</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>MajorDeviceClass</type>
            <name>majorDeviceClass</name>
            <anchorfile>qbluetoothdeviceinfo.html</anchorfile>
            <anchor>majorDeviceClass</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>quint8</type>
            <name>minorDeviceClass</name>
            <anchorfile>qbluetoothdeviceinfo.html</anchorfile>
            <anchor>minorDeviceClass</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>qint16</type>
            <name>rssi</name>
            <anchorfile>qbluetoothdeviceinfo.html</anchorfile>
            <anchor>rssi</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setRssi</name>
            <anchorfile>qbluetoothdeviceinfo.html</anchorfile>
            <anchor>setRssi</anchor>
            <arglist>(qint16 signal)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setServiceUuids</name>
            <anchorfile>qbluetoothdeviceinfo.html</anchorfile>
            <anchor>setServiceUuids</anchor>
            <arglist>(const QList&lt;QBluetoothUuid&gt; &amp;uuids, DataCompleteness completeness)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QList&lt;QBluetoothUuid&gt;</type>
            <name>serviceUuids</name>
            <anchorfile>qbluetoothdeviceinfo.html</anchorfile>
            <anchor>serviceUuids</anchor>
            <arglist>(DataCompleteness *completeness) const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>DataCompleteness</type>
            <name>serviceUuidsCompleteness</name>
            <anchorfile>qbluetoothdeviceinfo.html</anchorfile>
            <anchor>serviceUuidsCompleteness</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setCoreConfigurations</name>
            <anchorfile>qbluetoothdeviceinfo.html</anchorfile>
            <anchor>setCoreConfigurations</anchor>
            <arglist>(QBluetoothDeviceInfo::CoreConfigurations coreConfigs)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothDeviceInfo::CoreConfigurations</type>
            <name>coreConfigurations</name>
            <anchorfile>qbluetoothdeviceinfo.html</anchorfile>
            <anchor>coreConfigurations</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDeviceUuid</name>
            <anchorfile>qbluetoothdeviceinfo.html</anchorfile>
            <anchor>setDeviceUuid</anchor>
            <arglist>(const QBluetoothUuid &amp;uuid)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothUuid</type>
            <name>deviceUuid</name>
            <anchorfile>qbluetoothdeviceinfo.html</anchorfile>
            <anchor>deviceUuid</anchor>
            <arglist>() const</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QBluetoothHostInfo</name>
        <filename>qbluetoothhostinfo.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothHostInfo</name>
            <anchorfile>qbluetoothhostinfo.html</anchorfile>
            <anchor>QBluetoothHostInfo</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothHostInfo</name>
            <anchorfile>qbluetoothhostinfo.html</anchorfile>
            <anchor>QBluetoothHostInfo-2</anchor>
            <arglist>(const QBluetoothHostInfo &amp;other)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>~QBluetoothHostInfo</name>
            <anchorfile>qbluetoothhostinfo.html</anchorfile>
            <anchor>dtor.QBluetoothHostInfo</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothHostInfo &amp;</type>
            <name>operator=</name>
            <anchorfile>qbluetoothhostinfo.html</anchorfile>
            <anchor>operator-eq</anchor>
            <arglist>(const QBluetoothHostInfo &amp;other)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>operator==</name>
            <anchorfile>qbluetoothhostinfo.html</anchorfile>
            <anchor>operator-eq-eq</anchor>
            <arglist>(const QBluetoothHostInfo &amp;other) const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>operator!=</name>
            <anchorfile>qbluetoothhostinfo.html</anchorfile>
            <anchor>operator-not-eq</anchor>
            <arglist>(const QBluetoothHostInfo &amp;other) const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothAddress</type>
            <name>address</name>
            <anchorfile>qbluetoothhostinfo.html</anchorfile>
            <anchor>address</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAddress</name>
            <anchorfile>qbluetoothhostinfo.html</anchorfile>
            <anchor>setAddress</anchor>
            <arglist>(const QBluetoothAddress &amp;address)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>name</name>
            <anchorfile>qbluetoothhostinfo.html</anchorfile>
            <anchor>name</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setName</name>
            <anchorfile>qbluetoothhostinfo.html</anchorfile>
            <anchor>setName</anchor>
            <arglist>(const QString &amp;name)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QBluetoothLocalDevice</name>
        <filename>qbluetoothlocaldevice.html</filename>
        <base>QObject</base>
        <member kind="enum">
            <name>Pairing</name>
            <anchor>Pairing-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Unpaired">
            <anchor>Pairing-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Paired">
            <anchor>Pairing-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="AuthorizedPaired">
            <anchor>Pairing-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>HostMode</name>
            <anchor>HostMode-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HostPoweredOff">
            <anchor>HostMode-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HostConnectable">
            <anchor>HostMode-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HostDiscoverable">
            <anchor>HostMode-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HostDiscoverableLimitedInquiry">
            <anchor>HostMode-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>Error</name>
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="NoError">
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="PairingError">
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UnknownError">
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothLocalDevice</name>
            <anchorfile>qbluetoothlocaldevice.html</anchorfile>
            <anchor>QBluetoothLocalDevice</anchor>
            <arglist>(QObject *parent)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothLocalDevice</name>
            <anchorfile>qbluetoothlocaldevice.html</anchorfile>
            <anchor>QBluetoothLocalDevice-2</anchor>
            <arglist>(const QBluetoothAddress &amp;address, QObject *parent)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual </type>
            <name>~QBluetoothLocalDevice</name>
            <anchorfile>qbluetoothlocaldevice.html</anchorfile>
            <anchor>dtor.QBluetoothLocalDevice</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isValid</name>
            <anchorfile>qbluetoothlocaldevice.html</anchorfile>
            <anchor>isValid</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>requestPairing</name>
            <anchorfile>qbluetoothlocaldevice.html</anchorfile>
            <anchor>requestPairing</anchor>
            <arglist>(const QBluetoothAddress &amp;address, Pairing pairing)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Pairing</type>
            <name>pairingStatus</name>
            <anchorfile>qbluetoothlocaldevice.html</anchorfile>
            <anchor>pairingStatus</anchor>
            <arglist>(const QBluetoothAddress &amp;address) const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setHostMode</name>
            <anchorfile>qbluetoothlocaldevice.html</anchorfile>
            <anchor>setHostMode</anchor>
            <arglist>(QBluetoothLocalDevice::HostMode mode)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>HostMode</type>
            <name>hostMode</name>
            <anchorfile>qbluetoothlocaldevice.html</anchorfile>
            <anchor>hostMode</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QList&lt;QBluetoothAddress&gt;</type>
            <name>connectedDevices</name>
            <anchorfile>qbluetoothlocaldevice.html</anchorfile>
            <anchor>connectedDevices</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>powerOn</name>
            <anchorfile>qbluetoothlocaldevice.html</anchorfile>
            <anchor>powerOn</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>name</name>
            <anchorfile>qbluetoothlocaldevice.html</anchorfile>
            <anchor>name</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothAddress</type>
            <name>address</name>
            <anchorfile>qbluetoothlocaldevice.html</anchorfile>
            <anchor>address</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="yes">
            <type>QList&lt;QBluetoothHostInfo&gt;</type>
            <name>allDevices</name>
            <anchorfile>qbluetoothlocaldevice.html</anchorfile>
            <anchor>allDevices</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>pairingConfirmation</name>
            <anchorfile>qbluetoothlocaldevice.html</anchorfile>
            <anchor>pairingConfirmation</anchor>
            <arglist>(bool accept)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>hostModeStateChanged</name>
            <anchorfile>qbluetoothlocaldevice.html</anchorfile>
            <anchor>hostModeStateChanged</anchor>
            <arglist>(QBluetoothLocalDevice::HostMode state)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>deviceConnected</name>
            <anchorfile>qbluetoothlocaldevice.html</anchorfile>
            <anchor>deviceConnected</anchor>
            <arglist>(const QBluetoothAddress &amp;address)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>deviceDisconnected</name>
            <anchorfile>qbluetoothlocaldevice.html</anchorfile>
            <anchor>deviceDisconnected</anchor>
            <arglist>(const QBluetoothAddress &amp;address)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>pairingFinished</name>
            <anchorfile>qbluetoothlocaldevice.html</anchorfile>
            <anchor>pairingFinished</anchor>
            <arglist>(const QBluetoothAddress &amp;address, QBluetoothLocalDevice::Pairing pairing)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>pairingDisplayPinCode</name>
            <anchorfile>qbluetoothlocaldevice.html</anchorfile>
            <anchor>pairingDisplayPinCode</anchor>
            <arglist>(const QBluetoothAddress &amp;address, QString pin)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>pairingDisplayConfirmation</name>
            <anchorfile>qbluetoothlocaldevice.html</anchorfile>
            <anchor>pairingDisplayConfirmation</anchor>
            <arglist>(const QBluetoothAddress &amp;address, QString pin)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>error</name>
            <anchorfile>qbluetoothlocaldevice.html</anchorfile>
            <anchor>error</anchor>
            <arglist>(QBluetoothLocalDevice::Error error)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QBluetoothServer</name>
        <filename>qbluetoothserver.html</filename>
        <base>QObject</base>
        <member kind="enum">
            <name>Error</name>
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="NoError">
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UnknownError">
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="PoweredOffError">
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="InputOutputError">
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ServiceAlreadyRegisteredError">
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UnsupportedProtocolError">
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothServer</name>
            <anchorfile>qbluetoothserver.html</anchorfile>
            <anchor>QBluetoothServer</anchor>
            <arglist>(QBluetoothServiceInfo::Protocol serverType, QObject *parent)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>~QBluetoothServer</name>
            <anchorfile>qbluetoothserver.html</anchorfile>
            <anchor>dtor.QBluetoothServer</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>close</name>
            <anchorfile>qbluetoothserver.html</anchorfile>
            <anchor>close</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>listen</name>
            <anchorfile>qbluetoothserver.html</anchorfile>
            <anchor>listen</anchor>
            <arglist>(const QBluetoothAddress &amp;address, quint16 port)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothServiceInfo</type>
            <name>listen</name>
            <anchorfile>qbluetoothserver.html</anchorfile>
            <anchor>listen-2</anchor>
            <arglist>(const QBluetoothUuid &amp;uuid, const QString &amp;serviceName)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isListening</name>
            <anchorfile>qbluetoothserver.html</anchorfile>
            <anchor>isListening</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMaxPendingConnections</name>
            <anchorfile>qbluetoothserver.html</anchorfile>
            <anchor>setMaxPendingConnections</anchor>
            <arglist>(int numConnections)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>maxPendingConnections</name>
            <anchorfile>qbluetoothserver.html</anchorfile>
            <anchor>maxPendingConnections</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>hasPendingConnections</name>
            <anchorfile>qbluetoothserver.html</anchorfile>
            <anchor>hasPendingConnections</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothSocket *</type>
            <name>nextPendingConnection</name>
            <anchorfile>qbluetoothserver.html</anchorfile>
            <anchor>nextPendingConnection</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothAddress</type>
            <name>serverAddress</name>
            <anchorfile>qbluetoothserver.html</anchorfile>
            <anchor>serverAddress</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>quint16</type>
            <name>serverPort</name>
            <anchorfile>qbluetoothserver.html</anchorfile>
            <anchor>serverPort</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setSecurityFlags</name>
            <anchorfile>qbluetoothserver.html</anchorfile>
            <anchor>setSecurityFlags</anchor>
            <arglist>(QBluetooth::SecurityFlags security)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetooth::SecurityFlags</type>
            <name>securityFlags</name>
            <anchorfile>qbluetoothserver.html</anchorfile>
            <anchor>securityFlags</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothServiceInfo::Protocol</type>
            <name>serverType</name>
            <anchorfile>qbluetoothserver.html</anchorfile>
            <anchor>serverType</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Error</type>
            <name>error</name>
            <anchorfile>qbluetoothserver.html</anchorfile>
            <anchor>error</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>newConnection</name>
            <anchorfile>qbluetoothserver.html</anchorfile>
            <anchor>newConnection</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>error</name>
            <anchorfile>qbluetoothserver.html</anchorfile>
            <anchor>error-2</anchor>
            <arglist>(QBluetoothServer::Error error)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QBluetoothServiceDiscoveryAgent</name>
        <filename>qbluetoothservicediscoveryagent.html</filename>
        <base>QObject</base>
        <member kind="enum">
            <name>Error</name>
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="NoError">
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="InputOutputError">
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="PoweredOffError">
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="InvalidBluetoothAdapterError">
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UnknownError">
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>DiscoveryMode</name>
            <anchor>DiscoveryMode-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="MinimalDiscovery">
            <anchor>DiscoveryMode-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="FullDiscovery">
            <anchor>DiscoveryMode-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothServiceDiscoveryAgent</name>
            <anchorfile>qbluetoothservicediscoveryagent.html</anchorfile>
            <anchor>QBluetoothServiceDiscoveryAgent</anchor>
            <arglist>(QObject *parent)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothServiceDiscoveryAgent</name>
            <anchorfile>qbluetoothservicediscoveryagent.html</anchorfile>
            <anchor>QBluetoothServiceDiscoveryAgent-2</anchor>
            <arglist>(const QBluetoothAddress &amp;deviceAdapter, QObject *parent)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>~QBluetoothServiceDiscoveryAgent</name>
            <anchorfile>qbluetoothservicediscoveryagent.html</anchorfile>
            <anchor>dtor.QBluetoothServiceDiscoveryAgent</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isActive</name>
            <anchorfile>qbluetoothservicediscoveryagent.html</anchorfile>
            <anchor>isActive</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Error</type>
            <name>error</name>
            <anchorfile>qbluetoothservicediscoveryagent.html</anchorfile>
            <anchor>error</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>errorString</name>
            <anchorfile>qbluetoothservicediscoveryagent.html</anchorfile>
            <anchor>errorString</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QList&lt;QBluetoothServiceInfo&gt;</type>
            <name>discoveredServices</name>
            <anchorfile>qbluetoothservicediscoveryagent.html</anchorfile>
            <anchor>discoveredServices</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUuidFilter</name>
            <anchorfile>qbluetoothservicediscoveryagent.html</anchorfile>
            <anchor>setUuidFilter</anchor>
            <arglist>(const QList&lt;QBluetoothUuid&gt; &amp;uuids)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUuidFilter</name>
            <anchorfile>qbluetoothservicediscoveryagent.html</anchorfile>
            <anchor>setUuidFilter-2</anchor>
            <arglist>(const QBluetoothUuid &amp;uuid)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QList&lt;QBluetoothUuid&gt;</type>
            <name>uuidFilter</name>
            <anchorfile>qbluetoothservicediscoveryagent.html</anchorfile>
            <anchor>uuidFilter</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>setRemoteAddress</name>
            <anchorfile>qbluetoothservicediscoveryagent.html</anchorfile>
            <anchor>setRemoteAddress</anchor>
            <arglist>(const QBluetoothAddress &amp;address)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothAddress</type>
            <name>remoteAddress</name>
            <anchorfile>qbluetoothservicediscoveryagent.html</anchorfile>
            <anchor>remoteAddress</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>start</name>
            <anchorfile>qbluetoothservicediscoveryagent.html</anchorfile>
            <anchor>start</anchor>
            <arglist>(DiscoveryMode mode)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>stop</name>
            <anchorfile>qbluetoothservicediscoveryagent.html</anchorfile>
            <anchor>stop</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>clear</name>
            <anchorfile>qbluetoothservicediscoveryagent.html</anchorfile>
            <anchor>clear</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>serviceDiscovered</name>
            <anchorfile>qbluetoothservicediscoveryagent.html</anchorfile>
            <anchor>serviceDiscovered</anchor>
            <arglist>(const QBluetoothServiceInfo &amp;info)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>finished</name>
            <anchorfile>qbluetoothservicediscoveryagent.html</anchorfile>
            <anchor>finished</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>canceled</name>
            <anchorfile>qbluetoothservicediscoveryagent.html</anchorfile>
            <anchor>canceled</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>error</name>
            <anchorfile>qbluetoothservicediscoveryagent.html</anchorfile>
            <anchor>error-2</anchor>
            <arglist>(QBluetoothServiceDiscoveryAgent::Error error)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QBluetoothServiceInfo</name>
        <filename>qbluetoothserviceinfo.html</filename>
        <member kind="enum">
            <name>AttributeId</name>
            <anchor>AttributeId-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ServiceRecordHandle">
            <anchor>AttributeId-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ServiceClassIds">
            <anchor>AttributeId-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ServiceRecordState">
            <anchor>AttributeId-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ServiceId">
            <anchor>AttributeId-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ProtocolDescriptorList">
            <anchor>AttributeId-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="BrowseGroupList">
            <anchor>AttributeId-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="LanguageBaseAttributeIdList">
            <anchor>AttributeId-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ServiceInfoTimeToLive">
            <anchor>AttributeId-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ServiceAvailability">
            <anchor>AttributeId-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="BluetoothProfileDescriptorList">
            <anchor>AttributeId-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="DocumentationUrl">
            <anchor>AttributeId-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ClientExecutableUrl">
            <anchor>AttributeId-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="IconUrl">
            <anchor>AttributeId-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="AdditionalProtocolDescriptorList">
            <anchor>AttributeId-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="PrimaryLanguageBase">
            <anchor>AttributeId-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ServiceName">
            <anchor>AttributeId-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ServiceDescription">
            <anchor>AttributeId-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ServiceProvider">
            <anchor>AttributeId-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>Protocol</name>
            <anchor>Protocol-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UnknownProtocol">
            <anchor>Protocol-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="L2capProtocol">
            <anchor>Protocol-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="RfcommProtocol">
            <anchor>Protocol-enum</anchor>
            <arglist></arglist>
        </member>
        <class>QBluetoothServiceInfo::Sequence</class>
        <class>QBluetoothServiceInfo::Alternative</class>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothServiceInfo</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>QBluetoothServiceInfo</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothServiceInfo</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>QBluetoothServiceInfo-2</anchor>
            <arglist>(const QBluetoothServiceInfo &amp;other)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>~QBluetoothServiceInfo</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>dtor.QBluetoothServiceInfo</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isValid</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>isValid</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isComplete</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>isComplete</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDevice</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>setDevice</anchor>
            <arglist>(const QBluetoothDeviceInfo &amp;device)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothDeviceInfo</type>
            <name>device</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>device</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAttribute</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>setAttribute</anchor>
            <arglist>(quint16 attributeId, const QVariant &amp;value)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAttribute</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>setAttribute-2</anchor>
            <arglist>(quint16 attributeId, const QBluetoothUuid &amp;value)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAttribute</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>setAttribute-3</anchor>
            <arglist>(quint16 attributeId, const QBluetoothServiceInfo::Sequence &amp;value)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAttribute</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>setAttribute-4</anchor>
            <arglist>(quint16 attributeId, const QBluetoothServiceInfo::Alternative &amp;value)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVariant</type>
            <name>attribute</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>attribute</anchor>
            <arglist>(quint16 attributeId) const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QList&lt;quint16&gt;</type>
            <name>attributes</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>attributes</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>contains</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>contains</anchor>
            <arglist>(quint16 attributeId) const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>removeAttribute</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>removeAttribute</anchor>
            <arglist>(quint16 attributeId)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setServiceName</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>setServiceName</anchor>
            <arglist>(const QString &amp;name)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>serviceName</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>serviceName</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setServiceDescription</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>setServiceDescription</anchor>
            <arglist>(const QString &amp;description)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>serviceDescription</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>serviceDescription</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setServiceProvider</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>setServiceProvider</anchor>
            <arglist>(const QString &amp;provider)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>serviceProvider</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>serviceProvider</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothServiceInfo::Protocol</type>
            <name>socketProtocol</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>socketProtocol</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>protocolServiceMultiplexer</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>protocolServiceMultiplexer</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>serverChannel</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>serverChannel</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothServiceInfo::Sequence</type>
            <name>protocolDescriptor</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>protocolDescriptor</anchor>
            <arglist>(QBluetoothUuid::ProtocolUuid protocol) const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setServiceAvailability</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>setServiceAvailability</anchor>
            <arglist>(quint8 availability)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>quint8</type>
            <name>serviceAvailability</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>serviceAvailability</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setServiceUuid</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>setServiceUuid</anchor>
            <arglist>(const QBluetoothUuid &amp;uuid)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothUuid</type>
            <name>serviceUuid</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>serviceUuid</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QList&lt;QBluetoothUuid&gt;</type>
            <name>serviceClassUuids</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>serviceClassUuids</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothServiceInfo &amp;</type>
            <name>operator=</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>operator-eq</anchor>
            <arglist>(const QBluetoothServiceInfo &amp;other)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isRegistered</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>isRegistered</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>registerService</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>registerService</anchor>
            <arglist>(const QBluetoothAddress &amp;localAdapter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>unregisterService</name>
            <anchorfile>qbluetoothserviceinfo.html</anchorfile>
            <anchor>unregisterService</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QBluetoothServiceInfo::Sequence</name>
        <filename>qbluetoothserviceinfo-sequence.html</filename>
        <base>QList</base>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>Sequence</name>
            <anchorfile>qbluetoothserviceinfo-sequence.html</anchorfile>
            <anchor>Sequence</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>Sequence</name>
            <anchorfile>qbluetoothserviceinfo-sequence.html</anchorfile>
            <anchor>Sequence-2</anchor>
            <arglist>(const QList&lt;QVariant&gt; &amp;list)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QBluetoothServiceInfo::Alternative</name>
        <filename>qbluetoothserviceinfo-alternative.html</filename>
        <base>QList</base>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>Alternative</name>
            <anchorfile>qbluetoothserviceinfo-alternative.html</anchorfile>
            <anchor>Alternative</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>Alternative</name>
            <anchorfile>qbluetoothserviceinfo-alternative.html</anchorfile>
            <anchor>Alternative-2</anchor>
            <arglist>(const QList&lt;QVariant&gt; &amp;list)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QBluetoothSocket</name>
        <filename>qbluetoothsocket.html</filename>
        <base>QIODevice</base>
        <member kind="enum">
            <name>SocketState</name>
            <anchor>SocketState-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UnconnectedState">
            <anchor>SocketState-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ServiceLookupState">
            <anchor>SocketState-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ConnectingState">
            <anchor>SocketState-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ConnectedState">
            <anchor>SocketState-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="BoundState">
            <anchor>SocketState-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ClosingState">
            <anchor>SocketState-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ListeningState">
            <anchor>SocketState-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>SocketError</name>
            <anchor>SocketError-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="NoSocketError">
            <anchor>SocketError-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UnknownSocketError">
            <anchor>SocketError-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HostNotFoundError">
            <anchor>SocketError-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ServiceNotFoundError">
            <anchor>SocketError-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="NetworkError">
            <anchor>SocketError-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UnsupportedProtocolError">
            <anchor>SocketError-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="OperationError">
            <anchor>SocketError-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothSocket</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>QBluetoothSocket</anchor>
            <arglist>(QBluetoothServiceInfo::Protocol socketType, QObject *parent)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothSocket</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>QBluetoothSocket-2</anchor>
            <arglist>(QObject *parent)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual </type>
            <name>~QBluetoothSocket</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>dtor.QBluetoothSocket</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>abort</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>abort</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>close</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>close</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual bool</type>
            <name>isSequential</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>isSequential</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual qint64</type>
            <name>bytesAvailable</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>bytesAvailable</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual qint64</type>
            <name>bytesToWrite</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>bytesToWrite</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual bool</type>
            <name>canReadLine</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>canReadLine</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>connectToService</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>connectToService</anchor>
            <arglist>(const QBluetoothServiceInfo &amp;service, OpenMode openMode)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>connectToService</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>connectToService-2</anchor>
            <arglist>(const QBluetoothAddress &amp;address, const QBluetoothUuid &amp;uuid, OpenMode openMode)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>connectToService</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>connectToService-3</anchor>
            <arglist>(const QBluetoothAddress &amp;address, quint16 port, OpenMode openMode)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>disconnectFromService</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>disconnectFromService</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>localName</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>localName</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothAddress</type>
            <name>localAddress</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>localAddress</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>quint16</type>
            <name>localPort</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>localPort</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>peerName</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>peerName</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothAddress</type>
            <name>peerAddress</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>peerAddress</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>quint16</type>
            <name>peerPort</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>peerPort</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>setSocketDescriptor</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>setSocketDescriptor</anchor>
            <arglist>(int socketDescriptor, QBluetoothServiceInfo::Protocol socketType, SocketState socketState, OpenMode openMode)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>socketDescriptor</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>socketDescriptor</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothServiceInfo::Protocol</type>
            <name>socketType</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>socketType</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>SocketState</type>
            <name>state</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>state</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>SocketError</type>
            <name>error</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>error</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>errorString</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>errorString</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>connected</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>connected</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>disconnected</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>disconnected</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>error</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>error-2</anchor>
            <arglist>(QBluetoothSocket::SocketError error)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>stateChanged</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>stateChanged</anchor>
            <arglist>(QBluetoothSocket::SocketState state)</arglist>
        </member>
        <member kind="function" protection="protected" virtualness="virtual" static="no">
            <type>virtual qint64</type>
            <name>readData</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>readData</anchor>
            <arglist>(char *data, qint64 maxSize)</arglist>
        </member>
        <member kind="function" protection="protected" virtualness="virtual" static="no">
            <type>virtual qint64</type>
            <name>writeData</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>writeData</anchor>
            <arglist>(const char *data, qint64 maxSize)</arglist>
        </member>
        <member kind="function" protection="protected" virtualness="non" static="no">
            <type>void</type>
            <name>setSocketState</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>setSocketState</anchor>
            <arglist>(SocketState state)</arglist>
        </member>
        <member kind="function" protection="protected" virtualness="non" static="no">
            <type>void</type>
            <name>setSocketError</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>setSocketError</anchor>
            <arglist>(SocketError error_)</arglist>
        </member>
        <member kind="function" protection="protected" virtualness="non" static="no">
            <type>void</type>
            <name>doDeviceDiscovery</name>
            <anchorfile>qbluetoothsocket.html</anchorfile>
            <anchor>doDeviceDiscovery</anchor>
            <arglist>(const QBluetoothServiceInfo &amp;service, OpenMode openMode)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QBluetoothTransferManager</name>
        <filename>qbluetoothtransfermanager.html</filename>
        <base>QObject</base>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothTransferManager</name>
            <anchorfile>qbluetoothtransfermanager.html</anchorfile>
            <anchor>QBluetoothTransferManager</anchor>
            <arglist>(QObject *parent)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>~QBluetoothTransferManager</name>
            <anchorfile>qbluetoothtransfermanager.html</anchorfile>
            <anchor>dtor.QBluetoothTransferManager</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothTransferReply *</type>
            <name>put</name>
            <anchorfile>qbluetoothtransfermanager.html</anchorfile>
            <anchor>put</anchor>
            <arglist>(const QBluetoothTransferRequest &amp;request, QIODevice *data)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>finished</name>
            <anchorfile>qbluetoothtransfermanager.html</anchorfile>
            <anchor>finished</anchor>
            <arglist>(QBluetoothTransferReply *reply)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QBluetoothTransferReply</name>
        <filename>qbluetoothtransferreply.html</filename>
        <base>QObject</base>
        <member kind="enum">
            <name>TransferError</name>
            <anchor>TransferError-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="NoError">
            <anchor>TransferError-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UnknownError">
            <anchor>TransferError-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="FileNotFoundError">
            <anchor>TransferError-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HostNotFoundError">
            <anchor>TransferError-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UserCanceledTransferError">
            <anchor>TransferError-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="IODeviceNotReadableError">
            <anchor>TransferError-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ResourceBusyError">
            <anchor>TransferError-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="SessionError">
            <anchor>TransferError-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>~QBluetoothTransferReply</name>
            <anchorfile>qbluetoothtransferreply.html</anchorfile>
            <anchor>dtor.QBluetoothTransferReply</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtual="pure" static="no">
            <type>virtual bool</type>
            <name>isFinished</name>
            <anchorfile>qbluetoothtransferreply.html</anchorfile>
            <anchor>isFinished</anchor>
            <arglist>() const = 0</arglist>
        </member>
        <member kind="function" protection="public" virtual="pure" static="no">
            <type>virtual bool</type>
            <name>isRunning</name>
            <anchorfile>qbluetoothtransferreply.html</anchorfile>
            <anchor>isRunning</anchor>
            <arglist>() const = 0</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothTransferManager *</type>
            <name>manager</name>
            <anchorfile>qbluetoothtransferreply.html</anchorfile>
            <anchor>manager</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtual="pure" static="no">
            <type>virtual TransferError</type>
            <name>error</name>
            <anchorfile>qbluetoothtransferreply.html</anchorfile>
            <anchor>error</anchor>
            <arglist>() const = 0</arglist>
        </member>
        <member kind="function" protection="public" virtual="pure" static="no">
            <type>virtual QString</type>
            <name>errorString</name>
            <anchorfile>qbluetoothtransferreply.html</anchorfile>
            <anchor>errorString</anchor>
            <arglist>() const = 0</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothTransferRequest</type>
            <name>request</name>
            <anchorfile>qbluetoothtransferreply.html</anchorfile>
            <anchor>request</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>abort</name>
            <anchorfile>qbluetoothtransferreply.html</anchorfile>
            <anchor>abort</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>finished</name>
            <anchorfile>qbluetoothtransferreply.html</anchorfile>
            <anchor>finished</anchor>
            <arglist>(QBluetoothTransferReply *reply)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>transferProgress</name>
            <anchorfile>qbluetoothtransferreply.html</anchorfile>
            <anchor>transferProgress</anchor>
            <arglist>(qint64 bytesTransferred, qint64 bytesTotal)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>error</name>
            <anchorfile>qbluetoothtransferreply.html</anchorfile>
            <anchor>error-2</anchor>
            <arglist>(QBluetoothTransferReply::TransferError errorType)</arglist>
        </member>
        <member kind="function" protection="protected" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothTransferReply</name>
            <anchorfile>qbluetoothtransferreply.html</anchorfile>
            <anchor>QBluetoothTransferReply</anchor>
            <arglist>(QObject *parent)</arglist>
        </member>
        <member kind="function" protection="protected" virtualness="non" static="no">
            <type>void</type>
            <name>setManager</name>
            <anchorfile>qbluetoothtransferreply.html</anchorfile>
            <anchor>setManager</anchor>
            <arglist>(QBluetoothTransferManager *manager)</arglist>
        </member>
        <member kind="function" protection="protected" virtualness="non" static="no">
            <type>void</type>
            <name>setRequest</name>
            <anchorfile>qbluetoothtransferreply.html</anchorfile>
            <anchor>setRequest</anchor>
            <arglist>(const QBluetoothTransferRequest &amp;request)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QBluetoothTransferRequest</name>
        <filename>qbluetoothtransferrequest.html</filename>
        <member kind="enum">
            <name>Attribute</name>
            <anchor>Attribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="DescriptionAttribute">
            <anchor>Attribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="TimeAttribute">
            <anchor>Attribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="TypeAttribute">
            <anchor>Attribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="LengthAttribute">
            <anchor>Attribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="NameAttribute">
            <anchor>Attribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothTransferRequest</name>
            <anchorfile>qbluetoothtransferrequest.html</anchorfile>
            <anchor>QBluetoothTransferRequest</anchor>
            <arglist>(const QBluetoothAddress &amp;address)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothTransferRequest</name>
            <anchorfile>qbluetoothtransferrequest.html</anchorfile>
            <anchor>QBluetoothTransferRequest-2</anchor>
            <arglist>(const QBluetoothTransferRequest &amp;other)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>~QBluetoothTransferRequest</name>
            <anchorfile>qbluetoothtransferrequest.html</anchorfile>
            <anchor>dtor.QBluetoothTransferRequest</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVariant</type>
            <name>attribute</name>
            <anchorfile>qbluetoothtransferrequest.html</anchorfile>
            <anchor>attribute</anchor>
            <arglist>(Attribute code, const QVariant &amp;defaultValue) const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAttribute</name>
            <anchorfile>qbluetoothtransferrequest.html</anchorfile>
            <anchor>setAttribute</anchor>
            <arglist>(Attribute code, const QVariant &amp;value)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothAddress</type>
            <name>address</name>
            <anchorfile>qbluetoothtransferrequest.html</anchorfile>
            <anchor>address</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>operator!=</name>
            <anchorfile>qbluetoothtransferrequest.html</anchorfile>
            <anchor>operator-not-eq</anchor>
            <arglist>(const QBluetoothTransferRequest &amp;other) const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothTransferRequest &amp;</type>
            <name>operator=</name>
            <anchorfile>qbluetoothtransferrequest.html</anchorfile>
            <anchor>operator-eq</anchor>
            <arglist>(const QBluetoothTransferRequest &amp;other)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>operator==</name>
            <anchorfile>qbluetoothtransferrequest.html</anchorfile>
            <anchor>operator-eq-eq</anchor>
            <arglist>(const QBluetoothTransferRequest &amp;other) const</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QBluetoothUuid</name>
        <filename>qbluetoothuuid.html</filename>
        <base>QUuid</base>
        <member kind="enum">
            <name>ProtocolUuid</name>
            <anchor>ProtocolUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Sdp">
            <anchor>ProtocolUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Udp">
            <anchor>ProtocolUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Rfcomm">
            <anchor>ProtocolUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Tcp">
            <anchor>ProtocolUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="TcsBin">
            <anchor>ProtocolUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="TcsAt">
            <anchor>ProtocolUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Att">
            <anchor>ProtocolUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Obex">
            <anchor>ProtocolUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Ip">
            <anchor>ProtocolUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Ftp">
            <anchor>ProtocolUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Http">
            <anchor>ProtocolUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Wsp">
            <anchor>ProtocolUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Bnep">
            <anchor>ProtocolUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Upnp">
            <anchor>ProtocolUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Hidp">
            <anchor>ProtocolUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HardcopyControlChannel">
            <anchor>ProtocolUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HardcopyDataChannel">
            <anchor>ProtocolUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HardcopyNotification">
            <anchor>ProtocolUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Avctp">
            <anchor>ProtocolUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Avdtp">
            <anchor>ProtocolUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Cmtp">
            <anchor>ProtocolUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UdiCPlain">
            <anchor>ProtocolUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="McapControlChannel">
            <anchor>ProtocolUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="McapDataChannel">
            <anchor>ProtocolUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="L2cap">
            <anchor>ProtocolUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>ServiceClassUuid</name>
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ServiceDiscoveryServer">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="BrowseGroupDescriptor">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="PublicBrowseGroup">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="SerialPort">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="LANAccessUsingPPP">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="DialupNetworking">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="IrMCSync">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ObexObjectPush">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="OBEXFileTransfer">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="IrMCSyncCommand">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Headset">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="AudioSource">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="AudioSink">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="AV_RemoteControlTarget">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="AdvancedAudioDistribution">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="AV_RemoteControl">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="AV_RemoteControlController">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HeadsetAG">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="PANU">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="NAP">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="GN">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="DirectPrinting">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ReferencePrinting">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="BasicImage">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ImagingResponder">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ImagingAutomaticArchive">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ImagingReferenceObjects">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Handsfree">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HandsfreeAudioGateway">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="DirectPrintingReferenceObjectsService">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ReflectedUI">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="BasicPrinting">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="PrintingStatus">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HumanInterfaceDeviceService">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HardcopyCableReplacement">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HCRPrint">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HCRScan">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="SIMAccess">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="PhonebookAccessPCE">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="PhonebookAccessPSE">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="PhonebookAccess">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HeadsetHS">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="MessageAccessServer">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="MessageNotificationServer">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="MessageAccessProfile">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="GNSS">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="GNSSServer">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Display3D">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Glasses3D">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Synchronization3D">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="MPSProfile">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="MPSService">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="PnPInformation">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="GenericNetworking">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="GenericFileTransfer">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="GenericAudio">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="GenericTelephony">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="VideoSource">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="VideoSink">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="VideoDistribution">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HDP">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HDPSource">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HDPSink">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="GenericAccess">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="GenericAttribute">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ImmediateAlert">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="LinkLoss">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="TxPower">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="CurrentTimeService">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ReferenceTimeUpdateService">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="NextDSTChangeService">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Glucose">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HealthThermometer">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="DeviceInformation">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HeartRate">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="PhoneAlertStatusService">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="BatteryService">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="BloodPressure">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="AlertNotificationService">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HumanInterfaceDevice">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ScanParameters">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="RunningSpeedAndCadence">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="CyclingSpeedAndCadence">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="CyclingPower">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="LocationAndNavigation">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="EnvironmentalSensing">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="BodyComposition">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UserData">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="WeightScale">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="BondManagement">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ContinuousGlucoseMonitoring">
            <anchor>ServiceClassUuid-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>CharacteristicType</name>
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="DeviceName">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Appearance">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="PeripheralPrivacyFlag">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ReconnectionAddress">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="PeripheralPreferredConnectionParameters">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ServiceChanged">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="AlertLevel">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="TxPowerLevel">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="DateTime">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="DayOfWeek">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="DayDateTime">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ExactTime256">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="DSTOffset">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="TimeZone">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="LocalTimeInformation">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="TimeWithDST">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="TimeAccuracy">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="TimeSource">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ReferenceTimeInformation">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="TimeUpdateControlPoint">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="TimeUpdateState">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="GlucoseMeasurement">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="BatteryLevel">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="TemperatureMeasurement">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="TemperatureType">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="IntermediateTemperature">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="MeasurementInterval">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="BootKeyboardInputReport">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="SystemID">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ModelNumberString">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="SerialNumberString">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="FirmwareRevisionString">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HardwareRevisionString">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="SoftwareRevisionString">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ManufacturerNameString">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="IEEE1107320601RegulatoryCertificationDataList">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="CurrentTime">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="MagneticDeclination">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ScanRefresh">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="BootKeyboardOutputReport">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="BootMouseInputReport">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="GlucoseMeasurementContext">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="BloodPressureMeasurement">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="IntermediateCuffPressure">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HeartRateMeasurement">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="BodySensorLocation">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HeartRateControlPoint">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="AlertStatus">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="RingerControlPoint">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="RingerSetting">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="AlertCategoryIDBitMask">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="AlertCategoryID">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="AlertNotificationControlPoint">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UnreadAlertStatus">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="NewAlert">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="SupportedNewAlertCategory">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="SupportedUnreadAlertCategory">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="BloodPressureFeature">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HIDInformation">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ReportMap">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HIDControlPoint">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Report">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ProtocolMode">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ScanIntervalWindow">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="PnPID">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="GlucoseFeature">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="RecordAccessControlPoint">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="RSCMeasurement">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="RSCFeature">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="SCControlPoint">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="CSCMeasurement">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="CSCFeature">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="SensorLocation">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="CyclingPowerMeasurement">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="CyclingPowerVector">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="CyclingPowerFeature">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="CyclingPowerControlPoint">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="LocationAndSpeed">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Navigation">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="PositionQuality">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="LNFeature">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="LNControlPoint">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Elevation">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Pressure">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Temperature">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Humidity">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="TrueWindSpeed">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="TrueWindDirection">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ApparentWindSpeed">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ApparentWindDirection">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="GustFactor">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="PollenConcentration">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UVIndex">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Irradiance">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Rainfall">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="WindChill">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HeatIndex">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="DewPoint">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="DescriptorValueChanged">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="AerobicHeartRateLowerLimit">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="AerobicThreshold">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Age">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="AnaerobicHeartRateLowerLimit">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="AnaerobicHeartRateUpperLimit">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="AnaerobicThreshold">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="AerobicHeartRateUpperLimit">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="DateOfBirth">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="DateOfThresholdAssessment">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="EmailAddress">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="FatBurnHeartRateLowerLimit">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="FatBurnHeartRateUpperLimit">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="FirstName">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="FiveZoneHeartRateLimits">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Gender">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HeartRateMax">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Height">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="HipCircumference">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="LastName">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="MaximumRecommendedHeartRate">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="RestingHeartRate">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="SportTypeForAerobicAnaerobicThresholds">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ThreeZoneHeartRateLimits">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="TwoZoneHeartRateLimits">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="VO2Max">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="WaistCircumference">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Weight">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="DatabaseChangeIncrement">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UserIndex">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="BodyCompositionFeature">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="BodyCompositionMeasurement">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="WeightMeasurement">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="WeightScaleFeature">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UserControlPoint">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="MagneticFluxDensity2D">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="MagneticFluxDensity3D">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Language">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="BarometricPressureTrend">
            <anchor>CharacteristicType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>DescriptorType</name>
            <anchor>DescriptorType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UnknownDescriptorType">
            <anchor>DescriptorType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="CharacteristicExtendedProperties">
            <anchor>DescriptorType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="CharacteristicUserDescription">
            <anchor>DescriptorType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ClientCharacteristicConfiguration">
            <anchor>DescriptorType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ServerCharacteristicConfiguration">
            <anchor>DescriptorType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="CharacteristicPresentationFormat">
            <anchor>DescriptorType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="CharacteristicAggregateFormat">
            <anchor>DescriptorType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ValidRange">
            <anchor>DescriptorType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ExternalReportReference">
            <anchor>DescriptorType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ReportReference">
            <anchor>DescriptorType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="EnvironmentalSensingConfiguration">
            <anchor>DescriptorType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="EnvironmentalSensingMeasurement">
            <anchor>DescriptorType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="EnvironmentalSensingTriggerSetting">
            <anchor>DescriptorType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothUuid</name>
            <anchorfile>qbluetoothuuid.html</anchorfile>
            <anchor>QBluetoothUuid</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothUuid</name>
            <anchorfile>qbluetoothuuid.html</anchorfile>
            <anchor>QBluetoothUuid-2</anchor>
            <arglist>(ProtocolUuid uuid)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothUuid</name>
            <anchorfile>qbluetoothuuid.html</anchorfile>
            <anchor>QBluetoothUuid-3</anchor>
            <arglist>(ServiceClassUuid uuid)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothUuid</name>
            <anchorfile>qbluetoothuuid.html</anchorfile>
            <anchor>QBluetoothUuid-4</anchor>
            <arglist>(CharacteristicType uuid)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothUuid</name>
            <anchorfile>qbluetoothuuid.html</anchorfile>
            <anchor>QBluetoothUuid-5</anchor>
            <arglist>(DescriptorType uuid)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothUuid</name>
            <anchorfile>qbluetoothuuid.html</anchorfile>
            <anchor>QBluetoothUuid-6</anchor>
            <arglist>(quint16 uuid)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothUuid</name>
            <anchorfile>qbluetoothuuid.html</anchorfile>
            <anchor>QBluetoothUuid-7</anchor>
            <arglist>(quint32 uuid)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothUuid</name>
            <anchorfile>qbluetoothuuid.html</anchorfile>
            <anchor>QBluetoothUuid-8</anchor>
            <arglist>(quint128 uuid)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothUuid</name>
            <anchorfile>qbluetoothuuid.html</anchorfile>
            <anchor>QBluetoothUuid-9</anchor>
            <arglist>(const QString &amp;uuid)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothUuid</name>
            <anchorfile>qbluetoothuuid.html</anchorfile>
            <anchor>QBluetoothUuid-10</anchor>
            <arglist>(const QBluetoothUuid &amp;uuid)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QBluetoothUuid</name>
            <anchorfile>qbluetoothuuid.html</anchorfile>
            <anchor>QBluetoothUuid-11</anchor>
            <arglist>(const QUuid &amp;uuid)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>~QBluetoothUuid</name>
            <anchorfile>qbluetoothuuid.html</anchorfile>
            <anchor>dtor.QBluetoothUuid</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>operator==</name>
            <anchorfile>qbluetoothuuid.html</anchorfile>
            <anchor>operator-eq-eq</anchor>
            <arglist>(const QBluetoothUuid &amp;other) const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>minimumSize</name>
            <anchorfile>qbluetoothuuid.html</anchorfile>
            <anchor>minimumSize</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>quint16</type>
            <name>toUInt16</name>
            <anchorfile>qbluetoothuuid.html</anchorfile>
            <anchor>toUInt16</anchor>
            <arglist>(bool *ok) const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>quint32</type>
            <name>toUInt32</name>
            <anchorfile>qbluetoothuuid.html</anchorfile>
            <anchor>toUInt32</anchor>
            <arglist>(bool *ok) const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>quint128</type>
            <name>toUInt128</name>
            <anchorfile>qbluetoothuuid.html</anchorfile>
            <anchor>toUInt128</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="yes">
            <type>QString</type>
            <name>serviceClassToString</name>
            <anchorfile>qbluetoothuuid.html</anchorfile>
            <anchor>serviceClassToString</anchor>
            <arglist>(ServiceClassUuid uuid)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="yes">
            <type>QString</type>
            <name>protocolToString</name>
            <anchorfile>qbluetoothuuid.html</anchorfile>
            <anchor>protocolToString</anchor>
            <arglist>(ProtocolUuid uuid)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="yes">
            <type>QString</type>
            <name>characteristicToString</name>
            <anchorfile>qbluetoothuuid.html</anchorfile>
            <anchor>characteristicToString</anchor>
            <arglist>(CharacteristicType uuid)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="yes">
            <type>QString</type>
            <name>descriptorToString</name>
            <anchorfile>qbluetoothuuid.html</anchorfile>
            <anchor>descriptorToString</anchor>
            <arglist>(DescriptorType uuid)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QLowEnergyCharacteristic</name>
        <filename>qlowenergycharacteristic.html</filename>
        <member kind="enum">
            <name>PropertyType</name>
            <anchor>PropertyType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Unknown">
            <anchor>PropertyType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Broadcasting">
            <anchor>PropertyType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Read">
            <anchor>PropertyType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="WriteNoResponse">
            <anchor>PropertyType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Write">
            <anchor>PropertyType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Notify">
            <anchor>PropertyType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Indicate">
            <anchor>PropertyType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="WriteSigned">
            <anchor>PropertyType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ExtendedProperty">
            <anchor>PropertyType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="QLowEnergyCharacteristic::PropertyType">
            <name>PropertyTypes</name>
            <anchorfile>qlowenergycharacteristic.html</anchorfile>
            <anchor>PropertyType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QLowEnergyCharacteristic</name>
            <anchorfile>qlowenergycharacteristic.html</anchorfile>
            <anchor>QLowEnergyCharacteristic</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QLowEnergyCharacteristic</name>
            <anchorfile>qlowenergycharacteristic.html</anchorfile>
            <anchor>QLowEnergyCharacteristic-2</anchor>
            <arglist>(const QLowEnergyCharacteristic &amp;other)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>~QLowEnergyCharacteristic</name>
            <anchorfile>qlowenergycharacteristic.html</anchorfile>
            <anchor>dtor.QLowEnergyCharacteristic</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QLowEnergyCharacteristic &amp;</type>
            <name>operator=</name>
            <anchorfile>qlowenergycharacteristic.html</anchorfile>
            <anchor>operator-eq</anchor>
            <arglist>(const QLowEnergyCharacteristic &amp;other)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>operator==</name>
            <anchorfile>qlowenergycharacteristic.html</anchorfile>
            <anchor>operator-eq-eq</anchor>
            <arglist>(const QLowEnergyCharacteristic &amp;other) const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>operator!=</name>
            <anchorfile>qlowenergycharacteristic.html</anchorfile>
            <anchor>operator-not-eq</anchor>
            <arglist>(const QLowEnergyCharacteristic &amp;other) const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>name</name>
            <anchorfile>qlowenergycharacteristic.html</anchorfile>
            <anchor>name</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothUuid</type>
            <name>uuid</name>
            <anchorfile>qlowenergycharacteristic.html</anchorfile>
            <anchor>uuid</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QByteArray</type>
            <name>value</name>
            <anchorfile>qlowenergycharacteristic.html</anchorfile>
            <anchor>value</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QLowEnergyCharacteristic::PropertyTypes</type>
            <name>properties</name>
            <anchorfile>qlowenergycharacteristic.html</anchorfile>
            <anchor>properties</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QLowEnergyHandle</type>
            <name>handle</name>
            <anchorfile>qlowenergycharacteristic.html</anchorfile>
            <anchor>handle</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QLowEnergyDescriptor</type>
            <name>descriptor</name>
            <anchorfile>qlowenergycharacteristic.html</anchorfile>
            <anchor>descriptor</anchor>
            <arglist>(const QBluetoothUuid &amp;uuid) const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QList&lt;QLowEnergyDescriptor&gt;</type>
            <name>descriptors</name>
            <anchorfile>qlowenergycharacteristic.html</anchorfile>
            <anchor>descriptors</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isValid</name>
            <anchorfile>qlowenergycharacteristic.html</anchorfile>
            <anchor>isValid</anchor>
            <arglist>() const</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QLowEnergyController</name>
        <filename>qlowenergycontroller.html</filename>
        <base>QObject</base>
        <member kind="enum">
            <name>Error</name>
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="NoError">
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UnknownError">
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UnknownRemoteDeviceError">
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="NetworkError">
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="InvalidBluetoothAdapterError">
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ConnectionError">
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>ControllerState</name>
            <anchor>ControllerState-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UnconnectedState">
            <anchor>ControllerState-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ConnectingState">
            <anchor>ControllerState-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ConnectedState">
            <anchor>ControllerState-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="DiscoveringState">
            <anchor>ControllerState-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="DiscoveredState">
            <anchor>ControllerState-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ClosingState">
            <anchor>ControllerState-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>RemoteAddressType</name>
            <anchor>RemoteAddressType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="PublicAddress">
            <anchor>RemoteAddressType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="RandomAddress">
            <anchor>RemoteAddressType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QLowEnergyController</name>
            <anchorfile>qlowenergycontroller-obsolete.html</anchorfile>
            <anchor>QLowEnergyController-2</anchor>
            <arglist>(const QBluetoothAddress &amp;remoteDevice, QObject *parent)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QLowEnergyController</name>
            <anchorfile>qlowenergycontroller.html</anchorfile>
            <anchor>QLowEnergyController</anchor>
            <arglist>(const QBluetoothDeviceInfo &amp;remoteDeviceInfo, QObject *parent)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QLowEnergyController</name>
            <anchorfile>qlowenergycontroller-obsolete.html</anchorfile>
            <anchor>QLowEnergyController-3</anchor>
            <arglist>(const QBluetoothAddress &amp;remoteDevice, const QBluetoothAddress &amp;localDevice, QObject *parent)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>~QLowEnergyController</name>
            <anchorfile>qlowenergycontroller.html</anchorfile>
            <anchor>dtor.QLowEnergyController</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothAddress</type>
            <name>localAddress</name>
            <anchorfile>qlowenergycontroller.html</anchorfile>
            <anchor>localAddress</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothAddress</type>
            <name>remoteAddress</name>
            <anchorfile>qlowenergycontroller.html</anchorfile>
            <anchor>remoteAddress</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>remoteName</name>
            <anchorfile>qlowenergycontroller.html</anchorfile>
            <anchor>remoteName</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>ControllerState</type>
            <name>state</name>
            <anchorfile>qlowenergycontroller.html</anchorfile>
            <anchor>state</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>RemoteAddressType</type>
            <name>remoteAddressType</name>
            <anchorfile>qlowenergycontroller.html</anchorfile>
            <anchor>remoteAddressType</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setRemoteAddressType</name>
            <anchorfile>qlowenergycontroller.html</anchorfile>
            <anchor>setRemoteAddressType</anchor>
            <arglist>(RemoteAddressType type)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>connectToDevice</name>
            <anchorfile>qlowenergycontroller.html</anchorfile>
            <anchor>connectToDevice</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>disconnectFromDevice</name>
            <anchorfile>qlowenergycontroller.html</anchorfile>
            <anchor>disconnectFromDevice</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>discoverServices</name>
            <anchorfile>qlowenergycontroller.html</anchorfile>
            <anchor>discoverServices</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QList&lt;QBluetoothUuid&gt;</type>
            <name>services</name>
            <anchorfile>qlowenergycontroller.html</anchorfile>
            <anchor>services</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QLowEnergyService *</type>
            <name>createServiceObject</name>
            <anchorfile>qlowenergycontroller.html</anchorfile>
            <anchor>createServiceObject</anchor>
            <arglist>(const QBluetoothUuid &amp;serviceUuid, QObject *parent)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Error</type>
            <name>error</name>
            <anchorfile>qlowenergycontroller.html</anchorfile>
            <anchor>error</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>errorString</name>
            <anchorfile>qlowenergycontroller.html</anchorfile>
            <anchor>errorString</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>connected</name>
            <anchorfile>qlowenergycontroller.html</anchorfile>
            <anchor>connected</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>disconnected</name>
            <anchorfile>qlowenergycontroller.html</anchorfile>
            <anchor>disconnected</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>stateChanged</name>
            <anchorfile>qlowenergycontroller.html</anchorfile>
            <anchor>stateChanged</anchor>
            <arglist>(QLowEnergyController::ControllerState state)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>error</name>
            <anchorfile>qlowenergycontroller.html</anchorfile>
            <anchor>error-2</anchor>
            <arglist>(QLowEnergyController::Error newError)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>serviceDiscovered</name>
            <anchorfile>qlowenergycontroller.html</anchorfile>
            <anchor>serviceDiscovered</anchor>
            <arglist>(const QBluetoothUuid &amp;newService)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>discoveryFinished</name>
            <anchorfile>qlowenergycontroller.html</anchorfile>
            <anchor>discoveryFinished</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QLowEnergyDescriptor</name>
        <filename>qlowenergydescriptor.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QLowEnergyDescriptor</name>
            <anchorfile>qlowenergydescriptor.html</anchorfile>
            <anchor>QLowEnergyDescriptor</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QLowEnergyDescriptor</name>
            <anchorfile>qlowenergydescriptor.html</anchorfile>
            <anchor>QLowEnergyDescriptor-2</anchor>
            <arglist>(const QLowEnergyDescriptor &amp;other)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>~QLowEnergyDescriptor</name>
            <anchorfile>qlowenergydescriptor.html</anchorfile>
            <anchor>dtor.QLowEnergyDescriptor</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QLowEnergyDescriptor &amp;</type>
            <name>operator=</name>
            <anchorfile>qlowenergydescriptor.html</anchorfile>
            <anchor>operator-eq</anchor>
            <arglist>(const QLowEnergyDescriptor &amp;other)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>operator==</name>
            <anchorfile>qlowenergydescriptor.html</anchorfile>
            <anchor>operator-eq-eq</anchor>
            <arglist>(const QLowEnergyDescriptor &amp;other) const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>operator!=</name>
            <anchorfile>qlowenergydescriptor.html</anchorfile>
            <anchor>operator-not-eq</anchor>
            <arglist>(const QLowEnergyDescriptor &amp;other) const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isValid</name>
            <anchorfile>qlowenergydescriptor.html</anchorfile>
            <anchor>isValid</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QByteArray</type>
            <name>value</name>
            <anchorfile>qlowenergydescriptor.html</anchorfile>
            <anchor>value</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothUuid</type>
            <name>uuid</name>
            <anchorfile>qlowenergydescriptor.html</anchorfile>
            <anchor>uuid</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QLowEnergyHandle</type>
            <name>handle</name>
            <anchorfile>qlowenergydescriptor.html</anchorfile>
            <anchor>handle</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>name</name>
            <anchorfile>qlowenergydescriptor.html</anchorfile>
            <anchor>name</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothUuid::DescriptorType</type>
            <name>type</name>
            <anchorfile>qlowenergydescriptor.html</anchorfile>
            <anchor>type</anchor>
            <arglist>() const</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QLowEnergyService</name>
        <filename>qlowenergyservice.html</filename>
        <base>QObject</base>
        <member kind="enum">
            <name>ServiceType</name>
            <anchor>ServiceType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="PrimaryService">
            <anchor>ServiceType-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="IncludedService">
            <anchor>ServiceType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="QLowEnergyService::ServiceType">
            <name>ServiceTypes</name>
            <anchorfile>qlowenergyservice.html</anchorfile>
            <anchor>ServiceType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>ServiceError</name>
            <anchor>ServiceError-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="NoError">
            <anchor>ServiceError-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="OperationError">
            <anchor>ServiceError-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="CharacteristicWriteError">
            <anchor>ServiceError-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="DescriptorWriteError">
            <anchor>ServiceError-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UnknownError">
            <anchor>ServiceError-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="CharacteristicReadError">
            <anchor>ServiceError-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="DescriptorReadError">
            <anchor>ServiceError-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>ServiceState</name>
            <anchor>ServiceState-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="InvalidService">
            <anchor>ServiceState-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="DiscoveryRequired">
            <anchor>ServiceState-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="DiscoveringServices">
            <anchor>ServiceState-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ServiceDiscovered">
            <anchor>ServiceState-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enum">
            <name>WriteMode</name>
            <anchor>WriteMode-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="WriteWithResponse">
            <anchor>WriteMode-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="WriteWithoutResponse">
            <anchor>WriteMode-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>~QLowEnergyService</name>
            <anchorfile>qlowenergyservice.html</anchorfile>
            <anchor>dtor.QLowEnergyService</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QList&lt;QBluetoothUuid&gt;</type>
            <name>includedServices</name>
            <anchorfile>qlowenergyservice.html</anchorfile>
            <anchor>includedServices</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QLowEnergyService::ServiceTypes</type>
            <name>type</name>
            <anchorfile>qlowenergyservice.html</anchorfile>
            <anchor>type</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QLowEnergyService::ServiceState</type>
            <name>state</name>
            <anchorfile>qlowenergyservice.html</anchorfile>
            <anchor>state</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QLowEnergyCharacteristic</type>
            <name>characteristic</name>
            <anchorfile>qlowenergyservice.html</anchorfile>
            <anchor>characteristic</anchor>
            <arglist>(const QBluetoothUuid &amp;uuid) const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QList&lt;QLowEnergyCharacteristic&gt;</type>
            <name>characteristics</name>
            <anchorfile>qlowenergyservice.html</anchorfile>
            <anchor>characteristics</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QBluetoothUuid</type>
            <name>serviceUuid</name>
            <anchorfile>qlowenergyservice.html</anchorfile>
            <anchor>serviceUuid</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>serviceName</name>
            <anchorfile>qlowenergyservice.html</anchorfile>
            <anchor>serviceName</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>discoverDetails</name>
            <anchorfile>qlowenergyservice.html</anchorfile>
            <anchor>discoverDetails</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>ServiceError</type>
            <name>error</name>
            <anchorfile>qlowenergyservice.html</anchorfile>
            <anchor>error</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>contains</name>
            <anchorfile>qlowenergyservice.html</anchorfile>
            <anchor>contains</anchor>
            <arglist>(const QLowEnergyCharacteristic &amp;characteristic) const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>readCharacteristic</name>
            <anchorfile>qlowenergyservice.html</anchorfile>
            <anchor>readCharacteristic</anchor>
            <arglist>(const QLowEnergyCharacteristic &amp;characteristic)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>writeCharacteristic</name>
            <anchorfile>qlowenergyservice.html</anchorfile>
            <anchor>writeCharacteristic</anchor>
            <arglist>(const QLowEnergyCharacteristic &amp;characteristic, const QByteArray &amp;newValue, WriteMode mode)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>contains</name>
            <anchorfile>qlowenergyservice.html</anchorfile>
            <anchor>contains-2</anchor>
            <arglist>(const QLowEnergyDescriptor &amp;descriptor) const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>readDescriptor</name>
            <anchorfile>qlowenergyservice.html</anchorfile>
            <anchor>readDescriptor</anchor>
            <arglist>(const QLowEnergyDescriptor &amp;descriptor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>writeDescriptor</name>
            <anchorfile>qlowenergyservice.html</anchorfile>
            <anchor>writeDescriptor</anchor>
            <arglist>(const QLowEnergyDescriptor &amp;descriptor, const QByteArray &amp;newValue)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>stateChanged</name>
            <anchorfile>qlowenergyservice.html</anchorfile>
            <anchor>stateChanged</anchor>
            <arglist>(QLowEnergyService::ServiceState newState)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>characteristicChanged</name>
            <anchorfile>qlowenergyservice.html</anchorfile>
            <anchor>characteristicChanged</anchor>
            <arglist>(const QLowEnergyCharacteristic &amp;characteristic, const QByteArray &amp;newValue)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>characteristicRead</name>
            <anchorfile>qlowenergyservice.html</anchorfile>
            <anchor>characteristicRead</anchor>
            <arglist>(const QLowEnergyCharacteristic &amp;characteristic, const QByteArray &amp;value)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>characteristicWritten</name>
            <anchorfile>qlowenergyservice.html</anchorfile>
            <anchor>characteristicWritten</anchor>
            <arglist>(const QLowEnergyCharacteristic &amp;characteristic, const QByteArray &amp;newValue)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>descriptorRead</name>
            <anchorfile>qlowenergyservice.html</anchorfile>
            <anchor>descriptorRead</anchor>
            <arglist>(const QLowEnergyDescriptor &amp;descriptor, const QByteArray &amp;value)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>descriptorWritten</name>
            <anchorfile>qlowenergyservice.html</anchorfile>
            <anchor>descriptorWritten</anchor>
            <arglist>(const QLowEnergyDescriptor &amp;descriptor, const QByteArray &amp;newValue)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>error</name>
            <anchorfile>qlowenergyservice.html</anchorfile>
            <anchor>error-2</anchor>
            <arglist>(QLowEnergyService::ServiceError newError)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtBluetooth.BluetoothDiscoveryModel</name>
        <filename>qml-qtbluetooth-bluetoothdiscoverymodel.html</filename>
    </compound>
    <compound kind="class">
        <name>QtBluetooth.BluetoothService</name>
        <filename>qml-qtbluetooth-bluetoothservice.html</filename>
    </compound>
    <compound kind="class">
        <name>QtBluetooth.BluetoothSocket</name>
        <filename>qml-qtbluetooth-bluetoothsocket.html</filename>
    </compound>
</tagfile>
