<?xml version="1.0" encoding="UTF-8" ?>
<compositor>
    <shader name="standard_vs" type="vertex">
        <source>
        <![CDATA[
        void main(void)
        {
           gl_Position = ftransform();
           gl_TexCoord[0] = gl_MultiTexCoord0;
        }
        ]]>
        </source>
    </shader>
    
    <shader name="blur_ps" type="fragment">
        <source>
        <![CDATA[
        uniform sampler2D sceneTex;
        uniform vec2 blurOffset;
        
        void main(void)
        {
           vec2 uv = gl_TexCoord[0].st;
           vec4 color = texture2D(sceneTex, uv) * 0.3;
           color += texture2D(sceneTex, uv - blurOffset*3.0) * 0.05;
           color += texture2D(sceneTex, uv - blurOffset*2.0) * 0.1;
           color += texture2D(sceneTex, uv - blurOffset) * 0.2;
           color += texture2D(sceneTex, uv + blurOffset) * 0.2;
           color += texture2D(sceneTex, uv + blurOffset*2.0) * 0.1;
           color += texture2D(sceneTex, uv + blurOffset*3.0) * 0.05;
           gl_FragColor = color;
        }
        ]]>
        </source>
    </shader>
    
    <shader name="blend_ps" type="fragment">
        <source>
        <![CDATA[
        uniform sampler2D depthTex;
        uniform sampler2D sceneTex;
        uniform sampler2D blurredTex;
        uniform float focus;
        uniform float range;
        
        void main()
        {
           vec2 uv = gl_TexCoord[0].st;
           vec4 sharp = texture2D(sceneTex, uv);
           vec4 blur  = texture2D(blurredTex, uv);
           float depth = texture2D(depthTex, uv).s;
           gl_FragColor = mix(sharp, blur, clamp((depth - focus)/range, 0.0, 1.0));
           gl_FragDepth = depth;
        }
        ]]>
        </source>
    </shader>
    
    <uniform name="focus" type="float">
        <value>0.85</value>
    </uniform>
    
    <uniform name="range" type="float">
        <value>0.1</value>
    </uniform>
    
    <buffer_template name="sceneBufferTemplate" type="2d" width="1024" height="1024">
        <internal_format>rgba</internal_format>
        <source_format>rgba</source_format>
        <source_type>ubyte</source_type>
    </buffer_template>
    
    <buffer name="originalScene" template="sceneBufferTemplate" />
    <buffer name="blurredScene1" template="sceneBufferTemplate" />
    <buffer name="blurredScene2" template="sceneBufferTemplate" />
    
    <buffer name="originalDepth" type="2d" width="1024" height="1024">
        <internal_format>depth24</internal_format>
        <source_format>depth</source_format>
        <source_type>float</source_type>
    </buffer>
    
    <pass_template name="blurPassTemplate">
        <shader>standard_vs</shader>
        <shader>blur_ps</shader>
    </pass_template>
    
    <technique>
        <forward_pass name="DOF_OriginalScene">
            <near_far computation="none" />
            <clear_color>0 0 0 1</clear_color>
            <output_buffer target="color">originalScene</output_buffer>
            <output_buffer target="depth">originalDepth</output_buffer>
        </forward_pass>
        
        <deferred_pass name="DOF_Blur1" template="blurPassTemplate">
            <uniform name="blurOffset" type="vec2"><value>0.002 0</value></uniform>
            <input_buffer unit="0" varname="sceneTex">originalScene</input_buffer>
            <output_buffer target="color">blurredScene1</output_buffer>
        </deferred_pass>
        
        <deferred_pass name="DOF_Blur2" template="blurPassTemplate">
            <uniform name="blurOffset" type="vec2"><value>0 0.002</value></uniform>
            <input_buffer unit="0" varname="sceneTex">blurredScene1</input_buffer>
            <output_buffer target="color">blurredScene2</output_buffer>
        </deferred_pass>
        
        <deferred_pass name="DOF_Blend">
            <uniform>focus</uniform>
            <uniform>range</uniform>
            <input_buffer unit="0" varname="depthTex">originalDepth</input_buffer>
            <input_buffer unit="1" varname="sceneTex">originalScene</input_buffer>
            <input_buffer unit="2" varname="blurredTex">blurredScene2</input_buffer>
            <shader>standard_vs</shader>
            <shader>blend_ps</shader>
        </deferred_pass>
    </technique>
</compositor>
