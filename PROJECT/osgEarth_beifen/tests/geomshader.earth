<!--
osgEarth Sample - Geometry Shader

This example shows how to inject a GLSL Geometry Shader into the Terrain
Rendering pipeline.

-->
<map name="readymap.org" type="geocentric">
    
    <options>
        <terrain first_lod="1"/>
    </options>
    
    <image name="readymap_imagery" driver="tms">
        <url>http://readymap.org/readymap/tiles/1.0.0/7/</url>
    </image>
        
    <elevation name="readymap_elevation" driver="tms">
        <url>http://readymap.org/readymap/tiles/1.0.0/116/</url>
    </elevation>
    
    <extensions>
    
        <terrainshader>
            <code><![CDATA[
            
                #version 330
                #pragma vp_entryPoint "pulsateEffect"
                #pragma vp_location   "geometry"

                layout(triangles) in;
                layout(triangle_strip) out;
                layout(max_vertices = 3) out;
                
                // Internal helper functions:
                void VP_LoadVertex(in int);
                void VP_EmitModelVertex();

                uniform float osg_FrameTime;
                
                vec3 vp_Normal;
                
                void pulsateEffect()
                {
                    float strength = 0.25 + sin(osg_FrameTime*2.0)*0.25;
                    vec4 cen = (gl_in[0].gl_Position + gl_in[1].gl_Position + gl_in[2].gl_Position)/3.0;
                                        
                    // For each vertex in the input triangle:
                    for(int i=0; i < 3; ++i)
                    {
                        // Loads per-vertex data "i" into the stage globals:
                        VP_LoadVertex(i);
                        
                        // Transform the vertex:
                        vec4 pos = gl_in[i].gl_Position;
                        pos.xyz += vec3(0,0,1) * 1e6 * strength;
                        //pos += vec4(normalize(cen.xyz-pos.xyz) * distance(cen, pos) * strength, 0.0);
                        gl_Position = pos;
                        
                        // Copies stage globals to output and calles EmitVertex():
                        VP_EmitModelVertex();
                    }
                    EndPrimitive();
                }
                
            ]]></code>
        </terrainshader>
        
    </extensions>
</map>
